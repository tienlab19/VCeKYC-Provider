#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.2 effective-5.10 (swiftlang-6.2.0.19.9 clang-1700.3.19.1)
#ifndef VFTEKYC_SWIFT_H
#define VFTEKYC_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef unsigned char char8_t;
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="VFTeKYC",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

@class NSCoder;
SWIFT_CLASS("_TtC7VFTeKYC14AEOTPTextField")
@interface AEOTPTextField : UITextField
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

/// Collection of foreground point renderer capabilities.
SWIFT_PROTOCOL("_TtP7VFTeKYC12EFPointStyle_")
@protocol EFPointStyle
/// Fills a code point satisfying this style.
/// \param context the context to draw in.
///
/// \param rect the boundaries of the point to draw.
///
/// \param isStatic true if it is recommended to use a square instead of current style.
///
- (void)fillRectWithContext:(CGContextRef _Nonnull)context rect:(CGRect)rect isStatic:(BOOL)isStatic;
@end

/// Drawing rounded foreground points 🔘.
SWIFT_CLASS("_TtC7VFTeKYC18EFCirclePointStyle")
@interface EFCirclePointStyle : NSObject <EFPointStyle>
- (void)fillRectWithContext:(CGContextRef _Nonnull)context rect:(CGRect)rect isStatic:(BOOL)isStatic;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Drawing Sparkling foreground points ✨.
SWIFT_CLASS("_TtC7VFTeKYC19EFDiamondPointStyle")
@interface EFDiamondPointStyle : NSObject <EFPointStyle>
- (void)fillRectWithContext:(CGContextRef _Nonnull)context rect:(CGRect)rect isStatic:(BOOL)isStatic;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Levels of tolerance.
typedef SWIFT_ENUM(NSInteger, EFInputCorrectionLevel, open) {
/// L 7%.
  EFInputCorrectionLevelL = 0,
/// M 15%.
  EFInputCorrectionLevelM = 1,
/// Q 25%.
  EFInputCorrectionLevelQ = 2,
/// H 30%.
  EFInputCorrectionLevelH = 3,
};

/// A structure that contains width and height values.
/// note:
/// This is like <code>CGSize</code>, but with <code>Int</code> instead of <code>CGFloat</code>.
SWIFT_CLASS("_TtC7VFTeKYC9EFIntSize")
@interface EFIntSize : NSObject
/// A width value.
@property (nonatomic, readonly) NSInteger width;
/// A height value.
@property (nonatomic, readonly) NSInteger height;
/// Creates a size with dimensions specified as integer values.
/// note:
/// Creates a size with zero width and height if no argument is specified.
/// \param width The width value.
///
/// \param height The height value.
///
- (nonnull instancetype)initWithWidth:(NSInteger)width height:(NSInteger)height OBJC_DESIGNATED_INITIALIZER;
/// Converts <code>CGSize</code> to <code>EFIntSize</code>.
/// note:
/// <code>width</code> and <code>height</code> will be truncated to <code>Int</code>.
/// \param size the <code>CGSize</code> to convert.
///
- (nonnull instancetype)initWithSize:(CGSize)size;
/// Representation as <code>CGSize</code>.
@property (nonatomic, readonly) CGSize cgSize;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Shapes of foreground code points.
typedef SWIFT_ENUM(NSInteger, EFPointShape, open) {
/// Classical QR code look and feel 🔳.
  EFPointShapeSquare = 0,
/// More well rounded 🔘.
  EFPointShapeCircle = 1,
/// Sparkling ✨.
  EFPointShapeDiamond = 2,
};

@class NSString;
@class CIColor;
enum EFWatermarkMode : NSInteger;
/// Class for generating QR code images.
SWIFT_CLASS("_TtC7VFTeKYC17EFQRCodeGenerator")
@interface EFQRCodeGenerator : NSObject
/// Content to include in the generated QR Code.
/// important:
/// Limited to at most 1273 characters.
/// note:
/// The density of the QR-lattice increases with the increases of the content length.
@property (nonatomic, copy) NSString * _Nullable content;
/// Level of error tolerance.
/// <ul>
///   <li>
///     L 7%
///   </li>
///   <li>
///     M 15%
///   </li>
///   <li>
///     Q 25%
///   </li>
///   <li>
///     H 30%(Default)
///   </li>
/// </ul>
@property (nonatomic) enum EFInputCorrectionLevel inputCorrectionLevel;
/// Sets the generator to use the specified input correction level.
/// \param inputCorrectionLevel level of error-tolerant rate.
///
///
/// returns:
/// <code>self</code>, allowing chaining.
- (EFQRCodeGenerator * _Nonnull)withInputCorrectionLevel:(enum EFInputCorrectionLevel)inputCorrectionLevel;
/// Size of the QR code, defaults to 256 by 256.
/// note:
/// Will be overridden by non-<code>nil</code> <code>magnification</code> parameter.
@property (nonatomic, strong) EFIntSize * _Nonnull size;
/// Sets the generator to use the specified size.
/// \param size The width and height desired.
///
///
/// returns:
/// <code>self</code>, allowing chaining.
- (EFQRCodeGenerator * _Nonnull)withSize:(EFIntSize * _Nonnull)size;
/// The ratio of actual size to the smallest possible size, defaults to <code>nil</code>.
/// note:
/// Any non-<code>nil</code> value overrides the <code>size</code> parameter.
/// If you already have a desired size in mind, we have two helpers methods at your disposal to
/// calculate the magnification that results in the closet dimension:
/// <ul>
///   <li>
///     <code>maxMagnification(lessThanOrEqualTo:)</code>
///   </li>
///   <li>
///     <code>minMagnification(greaterThanOrEqualTo:)</code>
///   </li>
/// </ul>
/// \code
/// let generator = EFQRCodeGenerator(...)
///
/// // get max magnification where size ≤ desired size
/// if let maxMagnification = generator
///     .maxMagnification(lessThanOrEqualTo: desiredSize) {
///     generator.magnification = EFIntSize(
///         width: maxMagnification,
///         height: maxMagnification
///     )
/// }
/// // or get min magnification where size ≥ desired size
/// if let minMagnification = generator
///     .minMagnification(greaterThanOrEqualTo: desiredSize) {
///     generator.magnification = EFIntSize(
///         width: minMagnification,
///         height: minMagnification
///     )
/// }
///
/// // then generate
/// generator.generate()
///
/// \endcode
@property (nonatomic, strong) EFIntSize * _Nullable magnification;
/// Sets the generator to use the specified magnification.
/// \param magnification The desired scale factor in comparison to the intrinsic size.
/// See <code>magnification</code> for more details on how to translate your desired size to the
/// closest magnification.
///
///
/// returns:
/// <code>self</code>, allowing chaining.
- (EFQRCodeGenerator * _Nonnull)withMagnification:(EFIntSize * _Nullable)magnification;
/// Background color, defaults to white.
@property (nonatomic) CGColorRef _Nonnull backgroundColor;
/// Foreground color (for code points), defaults to black.
@property (nonatomic) CGColorRef _Nonnull foregroundColor;
/// Sets the generator to use the specified <code>CIColor</code>s.
/// \param backgroundColor The background <code>CIColor</code>.
/// If conversion to <code>CGColor</code> fails, will use white instead.
///
/// \param foregroundColor The foreground <code>CIColor</code> for code points.
/// If conversion to <code>CGColor</code> fails, will use black instead.
///
///
/// returns:
/// <code>self</code>, allowing chaining.
- (EFQRCodeGenerator * _Nonnull)withCIColorsForBackgroundColor:(CIColor * _Nonnull)backgroundColor foregroundColor:(CIColor * _Nonnull)foregroundColor;
/// Sets the generator to use the specified <code>CGColor</code>s.
/// \param backgroundColor The background <code>CGColor</code>.
///
/// \param foregroundColor The foreground <code>CGColor</code> for code points.
///
///
/// returns:
/// <code>self</code>, allowing chaining.
- (EFQRCodeGenerator * _Nonnull)withCGColorsForBackgroundColor:(CGColorRef _Nonnull)backgroundColor foregroundColor:(CGColorRef _Nonnull)foregroundColor;
/// Icon image in the center of QR code image, defaults to <code>nil</code>.
@property (nonatomic) CGImageRef _Nullable icon;
/// Size of the icon image, defaults to 20% of <code>size</code> if <code>nil</code>.
@property (nonatomic, strong) EFIntSize * _Nullable iconSize;
/// Sets the generator to use the specified icon in the specified size.
/// \param icon Icon image in the center of QR code.
///
/// \param size Size of the icon image, <code>nil</code> means to 20% of QR code size.
///
///
/// returns:
/// <code>self</code>, allowing chaining.
- (EFQRCodeGenerator * _Nonnull)withIcon:(CGImageRef _Nullable)icon size:(EFIntSize * _Nullable)size;
/// Background watermark image, defaults to <code>nil</code>.
@property (nonatomic) CGImageRef _Nullable watermark;
/// How to position and size the watermark, defaults to <code>EFWatermarkMode.scaleAspectFill</code>.
@property (nonatomic) enum EFWatermarkMode watermarkMode;
/// Foreground point offset, defaults to 0.
/// important:
/// Generated QR code might be hard to recognize with non-zero values.
@property (nonatomic) CGFloat pointOffset;
/// Sets the generator to use the specified point offset.
/// \param pointOffset Foreground point offset.
///
///
/// returns:
/// <code>self</code>, allowing chaining.
- (EFQRCodeGenerator * _Nonnull)withPointOffset:(CGFloat)pointOffset;
/// If <code>false</code> (default), area of watermark where alpha is 0 will be transparent.
@property (nonatomic) BOOL isWatermarkOpaque;
/// Set generator to treat watermark image as opaque (or not).
/// \param isWatermarkOpaque Should ignore alpha channel or not, defaults to <code>true</code>.
///
///
/// returns:
/// <code>self</code>, allowing chaining.
- (EFQRCodeGenerator * _Nonnull)withOpaqueWatermark:(BOOL)isWatermarkOpaque;
/// Set generator to treat watermark image as transparent (or not).
/// \param isTransparent Should use alpha channel or not, defaults to <code>true</code>.
///
///
/// returns:
/// <code>self</code>, allowing chaining.
- (EFQRCodeGenerator * _Nonnull)withTransparentWatermark:(BOOL)isTransparent;
/// Style of foreground code points, defaults to <code>EFPointStyle.square</code>.
@property (nonatomic, strong) id <EFPointStyle> _Nonnull pointStyle;
/// Set generator to use the specified foreground point style.
/// \param pointStyle Style of foreground code points.
///
///
/// returns:
/// <code>self</code>, allowing chaining.
- (EFQRCodeGenerator * _Nonnull)withPointStyle:(id <EFPointStyle> _Nonnull)pointStyle;
/// If <code>true</code> (default), points for timing pattern will be squares.
@property (nonatomic) BOOL isTimingPointStatic;
/// Set generator to use un-styled points for timing pattern (or not).
/// \param isStatic Wether or not to use square shape for timing pattern points,
/// defaults to <code>true</code>.
///
///
/// returns:
/// <code>self</code>, allowing chaining.
- (EFQRCodeGenerator * _Nonnull)withStaticTimingPoint:(BOOL)isStatic;
/// Set generator to use styled points for timing pattern (or not).
/// \param ignoreTiming Wether or not to use current <code>pointStyle</code>
/// for timing pattern points, defaults to <code>true</code>.
///
///
/// returns:
/// <code>self</code>, allowing chaining.
- (EFQRCodeGenerator * _Nonnull)withStyledTimingPoint:(BOOL)ignoreTiming;
/// Clears the cache.
/// note:
/// You do not need to call this except for reducing memory usage.
- (void)clearCache;
/// Fetches the final QR code image.
///
/// returns:
/// the generated QR code, or <code>nil</code> if failed.
- (CGImageRef _Nullable)generate SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@interface EFQRCodeGenerator (SWIFT_EXTENSION(VFTeKYC))
/// Shape of foreground code points, defaults to <code>EFPointShape.square</code>.
@property (nonatomic) enum EFPointShape pointShape SWIFT_DEPRECATED_MSG("", "pointStyle");
/// Set generator to use the specified foreground point shape.
/// \param pointShape Shape of foreground code points.
///
///
/// returns:
/// <code>self</code>, allowing chaining.
- (EFQRCodeGenerator * _Nonnull)withPointShape:(enum EFPointShape)pointShape SWIFT_DEPRECATED_MSG("", "withPointStyle:");
@end

@class NSData;
@interface EFQRCodeGenerator (SWIFT_EXTENSION(VFTeKYC))
- (nonnull instancetype)initWithContent:(NSString * _Nonnull)content encoding:(NSUInteger)encoding size:(EFIntSize * _Nonnull)size;
- (EFQRCodeGenerator * _Nonnull)withContent:(NSString * _Nonnull)content encoding:(NSUInteger)encoding;
- (EFQRCodeGenerator * _Nonnull)withNormalMode;
- (EFQRCodeGenerator * _Nonnull)withGrayscaleMode;
- (EFQRCodeGenerator * _Nonnull)withBinarizationModeWithThreshold:(CGFloat)threshold;
- (EFQRCodeGenerator * _Nonnull)withWatermark:(CGImageRef _Nonnull)watermark mode:(enum EFWatermarkMode)mode;
- (NSData * _Nullable)generateGIFWithWatermarkGIF:(NSData * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
- (NSData * _Nullable)generateGIFWithWatermarkGIF:(NSData * _Nonnull)data delay:(double)delay loopCount:(NSInteger)loopCount useMultipleThreads:(BOOL)useMultipleThreads SWIFT_WARN_UNUSED_RESULT;
@end

@interface EFQRCodeGenerator (SWIFT_EXTENSION(VFTeKYC))
- (void)setContentWithContent:(NSString * _Nonnull)content SWIFT_DEPRECATED_MSG("", "withContent(_:)");
- (void)setInputCorrectionLevelWithInputCorrectionLevel:(enum EFInputCorrectionLevel)inputCorrectionLevel SWIFT_DEPRECATED_MSG("", "withInputCorrectionLevel:");
- (void)setSizeWithSize:(EFIntSize * _Nonnull)size SWIFT_DEPRECATED_MSG("", "withSize:");
- (void)setMagnificationWithMagnification:(EFIntSize * _Nullable)magnification SWIFT_DEPRECATED_MSG("", "withMagnification:");
- (void)setColorsWithBackgroundColor:(CGColorRef _Nonnull)backgroundColor foregroundColor:(CGColorRef _Nonnull)foregroundColor SWIFT_DEPRECATED_MSG("", "withCGColorsForBackgroundColor:foregroundColor:");
- (void)setIconWithIcon:(CGImageRef _Nullable)icon size:(EFIntSize * _Nullable)size SWIFT_DEPRECATED_MSG("", "withIcon:size:");
- (void)setForegroundPointOffsetWithForegroundPointOffset:(CGFloat)foregroundPointOffset SWIFT_DEPRECATED_MSG("", "withPointOffset:");
- (void)setAllowTransparentWithAllowTransparent:(BOOL)allowTransparent SWIFT_DEPRECATED_MSG("", "withTransparentWatermark:");
- (void)setPointShapeWithPointShape:(enum EFPointShape)pointShape SWIFT_DEPRECATED_MSG("", "withPointShape:");
- (void)setIgnoreTimingWithIgnoreTiming:(BOOL)isTimingStyled SWIFT_DEPRECATED_MSG("", "withStyledTimingPoint:");
@end

/// Class for recognizing QR code contents from images.
SWIFT_CLASS("_TtC7VFTeKYC18EFQRCodeRecognizer")
@interface EFQRCodeRecognizer : NSObject
/// The QR code to recognize.
@property (nonatomic) CGImageRef _Nonnull image;
/// Initialize a QR code recognizer to recognize the specified <code>image</code>.
/// \param image a QR code to recognize.
///
- (nonnull instancetype)initWithImage:(CGImageRef _Nonnull)image OBJC_DESIGNATED_INITIALIZER;
/// Recognizes and returns the contents of the current QR code <code>image</code>.
/// note:
/// If the returned array is empty, there’s no recognizable content in the QR code <code>image</code>.
///
/// returns:
/// an array of contents recognized from <code>image</code>.
- (NSArray<NSString *> * _Nonnull)recognize SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@interface EFQRCodeRecognizer (SWIFT_EXTENSION(VFTeKYC))
- (void)setImageWithImage:(CGImageRef _Nonnull)image SWIFT_DEPRECATED_MSG("Set `image` property directly.");
@end

/// Drawing classical look and feel QR code foreground points 🔳.
SWIFT_CLASS("_TtC7VFTeKYC18EFSquarePointStyle")
@interface EFSquarePointStyle : NSObject <EFPointStyle>
- (void)fillRectWithContext:(CGContextRef _Nonnull)context rect:(CGRect)rect isStatic:(BOOL)isStatic;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Options to specify how watermark position and size for QR code.
typedef SWIFT_ENUM(NSInteger, EFWatermarkMode, open) {
/// The option to scale the watermark to fit the size of QR code by changing the aspect ratio of the watermark if necessary.
  EFWatermarkModeScaleToFill = 0,
/// The option to scale the watermark to fit the size of the QR code by maintaining the aspect ratio. Any remaining area of the QR code uses the background color.
  EFWatermarkModeScaleAspectFit = 1,
/// The option to scale the watermark to fill the size of the QR code. Some portion of the watermark may be clipped to fill the QR code.
  EFWatermarkModeScaleAspectFill = 2,
/// The option to center the watermark in the QR code, keeping the proportions the same.
  EFWatermarkModeCenter = 3,
/// The option to center the watermark aligned at the top in the QR code.
  EFWatermarkModeTop = 4,
/// The option to center the watermark aligned at the bottom in the QR code.
  EFWatermarkModeBottom = 5,
/// The option to align the watermark on the left of the QR code.
  EFWatermarkModeLeft = 6,
/// The option to align the watermark on the right of the QR code.
  EFWatermarkModeRight = 7,
/// The option to align the watermark in the top-left corner of the QR code.
  EFWatermarkModeTopLeft = 8,
/// The option to align the watermark in the top-right corner of the QR code.
  EFWatermarkModeTopRight = 9,
/// The option to align the watermark in the bottom-left corner of the QR code.
  EFWatermarkModeBottomLeft = 10,
/// The option to align the watermark in the bottom-right corner of the QR code.
  EFWatermarkModeBottomRight = 11,
};

@class NSBundle;
SWIFT_CLASS("_TtC7VFTeKYC7FirstVC")
@interface FirstVC : UIViewController
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS("_TtC7VFTeKYC13HKProgressHUD")
@interface HKProgressHUD : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)updateConstraints;
- (void)layoutSubviews;
@end

SWIFT_CLASS("_TtC7VFTeKYC7LoginVC")
@interface LoginVC : UIViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS("_TtC7VFTeKYC14PassportReader") SWIFT_AVAILABILITY(ios,introduced=13)
@interface PassportReader : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC7VFTeKYC25ProgressHUDBackgroundView")
@interface ProgressHUDBackgroundView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@end

/// Class which implements the various <code>URLSessionDelegate</code> methods to connect various Alamofire features.
SWIFT_CLASS("_TtC7VFTeKYC15SessionDelegate")
@interface SessionDelegate : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSURLSession;
@interface SessionDelegate (SWIFT_EXTENSION(VFTeKYC)) <NSURLSessionDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
@end

@class NSURLSessionDataTask;
@class NSCachedURLResponse;
@interface SessionDelegate (SWIFT_EXTENSION(VFTeKYC)) <NSURLSessionDataDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask willCacheResponse:(NSCachedURLResponse * _Nonnull)proposedResponse completionHandler:(void (^ _Nonnull)(NSCachedURLResponse * _Nullable))completionHandler;
@end

@class NSURLSessionDownloadTask;
@class NSURL;
@interface SessionDelegate (SWIFT_EXTENSION(VFTeKYC)) <NSURLSessionDownloadDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didResumeAtOffset:(int64_t)fileOffset expectedTotalBytes:(int64_t)expectedTotalBytes;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
@end

@class NSURLSessionTask;
@class NSURLAuthenticationChallenge;
@class NSURLCredential;
@class NSInputStream;
@class NSHTTPURLResponse;
@class NSURLRequest;
@class NSURLSessionTaskMetrics;
@interface SessionDelegate (SWIFT_EXTENSION(VFTeKYC)) <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didSendBodyData:(int64_t)bytesSent totalBytesSent:(int64_t)totalBytesSent totalBytesExpectedToSend:(int64_t)totalBytesExpectedToSend;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task needNewBodyStream:(void (^ _Nonnull)(NSInputStream * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didFinishCollectingMetrics:(NSURLSessionTaskMetrics * _Nonnull)metrics;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session taskIsWaitingForConnectivity:(NSURLSessionTask * _Nonnull)task SWIFT_AVAILABILITY(watchos,introduced=4.0) SWIFT_AVAILABILITY(tvos,introduced=11.0) SWIFT_AVAILABILITY(ios,introduced=11.0) SWIFT_AVAILABILITY(macos,introduced=10.13);
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
